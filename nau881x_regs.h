#ifndef MR_NAU881X_REGS_H
#define MR_NAU881X_REGS_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

#define NAU881X_I2C_ADDRESS (0x1A << 1)

#define NAU881X_PART_NAU8810 0
#define NAU881X_PART_NAU8814 1

typedef enum _nau881x_register
{
    NAU881X_REG_SOFTWARE_RESET = 0,
    NAU881X_REG_POWER_MANAGEMENT_1 = 1,
    NAU881X_REG_POWER_MANAGEMENT_2 = 2,
    NAU881X_REG_POWER_MANAGEMENT_3 = 3,
    NAU881X_REG_AUDIO_INTERFACE = 4,
    NAU881X_REG_COMPANDING_CTRL = 5,
    NAU881X_REG_CLOCK_CTRL_1 = 6,
    NAU881X_REG_CLOCK_CTRL_2 = 7,
    NAU881X_REG_GPIO_CTRL = 8,      // NAU8814

    NAU881X_REG_DAC_CTRL = 10,
    NAU881X_REG_DAC_VOL = 11,

    NAU881X_REG_ADC_CTRL = 14,
    NAU881X_REG_ADC_VOL = 15,

    NAU881X_REG_EQ_1 = 18,
    NAU881X_REG_EQ_2 = 19,
    NAU881X_REG_EQ_3 = 20,
    NAU881X_REG_EQ_4 = 21,
    NAU881X_REG_EQ_5 = 22,
    
    NAU881X_REG_DAC_LIMITER_1 = 24,
    NAU881X_REG_DAC_LIMITER_2 = 25,

    NAU881X_REG_NOTCH_FILTER_0_H = 27,
    NAU881X_REG_NOTCH_FILTER_0_L = 28,
    NAU881X_REG_NOTCH_FILTER_1_H = 29,
    NAU881X_REG_NOTCH_FILTER_1_L = 30,

    NAU881X_REG_ALC_CTRL_1 = 32,
    NAU881X_REG_ALC_CTRL_2 = 33,
    NAU881X_REG_ALC_CTRL_3 = 34,
    NAU881X_REG_NOISE_GATE = 35,
    NAU881X_REG_PLL_N = 36,
    NAU881X_REG_PLL_K1 = 37,
    NAU881X_REG_PLL_K2 = 38,
    NAU881X_REG_PLL_K3 = 39,
    NAU881X_REG_ATTN_CTRL = 40,

    NAU881X_REG_INPUT_CTRL = 44,
    NAU881X_REG_PGA_GAIN_CTRL = 45,

    NAU881X_REG_ADC_BOOST_CTRL = 47,

    NAU881X_REG_OUTPUT_CTRL = 49,
    NAU881X_REG_MIXER_CTRL = 50,

    NAU881X_REG_SPK_VOL_CTRL = 54,

    NAU881X_REG_MONO_MIXER_CTRL = 56,

    NAU881X_REG_POWER_MANAGEMENT_4 = 58,
    NAU881X_REG_TIMESLOT = 59,
    NAU881X_REG_ADCOUT_DRIVE = 60,

    NAU881X_REG_SILICON_REV = 62,
    NAU881X_REG_2WIRE_ID = 63,
    NAU881X_REG_ADDITIONAL_ID = 64,

    NAU881X_REG_HIGH_VOLTAGE_CTRL = 69,
    NAU881X_REG_ALC_ENHANCEMENTS_1 = 70,
    NAU881X_REG_ALC_ENHANCEMENTS_2 = 71,

    NAU881X_REG_ADDITIONAL_IF_CTRL = 73,

    NAU881X_REG_POWER_TIE_OFF_CTRL = 75,
    NAU881X_REG_AGC_P2P_DET = 76,
    NAU881X_REG_AGC_PEAK_DET = 77,
    NAU881X_REG_CTRL_AND_STATUS = 78,
    NAU881X_REG_OUTPUT_TIE_OFF_CTRL = 79
} nau881x_register_t;

typedef enum _nau881x_input
{
    NAU881X_INPUT_NONE = 0,
    NAU881X_INPUT_MICP = (1 << 0),
    NAU881X_INPUT_MICN = (1 << 1),
    NAU881X_INPUT_AUX = (1 << 2)    // NAU8814
} nau881x_input_t;

typedef enum _nau881x_aux_mode
{
    NAU881X_AUXMODE_INVERTING = 0,
    NAU881X_AUXMODE_MIXER = 1
} nau881x_aux_mode_t;

typedef enum _nau881x_adc_oversamplerate
{
    NAU881X_ADC_OVERSAMPLE_64X = 0,
    NAU881X_ADC_OVERSAMPLE_128X = 1
} nau881x_adc_oversamplerate_t;

typedef enum _nau881x_hpf_mode
{
    NAU881X_HPF_MODE_AUDIO = 0,
    NAU881X_HPF_MODE_APP = 1
} nau881x_hpf_mode_t;

typedef enum _nau881x_alc_mode
{
    NAU881X_ALC_MODE_NORMAL = 0,
    NAU881X_ALC_MODE_LIMITER = 1
} nau881x_alc_mode_t;

typedef enum _nau881x_dac_samplerate
{
    NAU881X_DAC_SAMPLERATE_NO_DEEMPHASIS = 0,
    NAU881X_ADC_OVERSAMPLE_32KHZ = 1,
    NAU881X_ADC_OVERSAMPLE_44KHZ = 2,
    NAU881X_ADC_OVERSAMPLE_48KHZ = 3
} nau881x_dac_samplerate_t;

#ifdef __cplusplus
}
#endif

#endif // MR_NAU881X_REGS_H
